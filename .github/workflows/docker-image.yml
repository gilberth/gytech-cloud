name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Verify files and test builds
      run: |
        echo "=== Project structure ==="
        ls -la
        echo "=== Frontend package.json ==="
        cat frontend/package.json | head -20
        echo "=== Backend package.json ==="
        cat backend/package.json | head -20
        echo "=== Testing frontend build locally ==="
        cd frontend
        npm ci
        npm run build || echo "Frontend build failed with exit code $?"
        cd ..
        echo "=== Testing backend build locally ==="
        cd backend
        npm ci
        npx prisma generate
        npm run build || echo "Backend build failed with exit code $?"

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build Docker image with detailed logs
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: false
        tags: test-build
        build-args: |
          BUILDKIT_PROGRESS=plain
        outputs: type=docker,dest=/tmp/test-image.tar
        
    - name: Push Docker image (if build successful)
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max